(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{369:function(t,s,a){t.exports=a.p+"assets/img/6-1.d4e74911.jpg"},370:function(t,s,a){t.exports=a.p+"assets/img/6-2.213458c2.png"},371:function(t,s,a){t.exports=a.p+"assets/img/6-3.10fd1438.jpg"},372:function(t,s,a){t.exports=a.p+"assets/img/6-4.229ed489.jpg"},373:function(t,s,a){t.exports=a.p+"assets/img/6-5.18f11d34.jpg"},470:function(t,s,a){"use strict";a.r(s);var n=a(27),p=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("blockquote",[n("p",[t._v("在我看来，大部分面试的算法题从来都不是难在思维，而是缺乏系统的教学。它不像数学属于普及的基础教育，算法题目的大部分知识、技巧往往都局限于 competitive programming 当中 (比如各种 OI 竞赛、 ACM 竞赛等)，这些都是大部分计算机行业从业者接触不到的。它就像一个大群体中一个半封闭的小群体一样，系统的知识就在那里，只是我们很少会主动走进去。因此，我期望将这些知识给带出来，就引申出了本系列文章和视频。")])]),t._v(" "),n("p",[t._v("动态规划不是指的某种具体算法（比如 dijkstra 单源最短路），而是属于一种经典的思考方式，在算法竞赛和面试/笔试中其一向是宠儿。追溯其本源，是由著名数学家 R.Bellman 等人在研究 "),n("strong",[t._v("多阶段决策过程")]),t._v(" 的优化问题而创立的，当前属于 "),n("strong",[t._v("运筹学")]),t._v(" 的分支之一。")]),t._v(" "),n("p",[t._v("而回归到算法问题当中，动态规划受宠的原因之一就是它不存在统一的处理方法，而需要我们根据具体的问题性质加上一些技巧结合来处理。这样能够让企业/竞赛方更加真实的考察应试者的思维能力。不过这点变化仍然挡不住经历过高考洗礼的我们，毕竟应试、刷题已经融入到大部分同学的血液里了。")]),t._v(" "),n("p",[t._v("在实际做题过程中，通常会遇到以下几个问题：")]),t._v(" "),n("ol",[n("li",[t._v("阅读完题目后，无法想出具体的思路，比如无法将题意和动态规划思路联系起来。")]),t._v(" "),n("li",[t._v("有了思路，无法写出具体代码或者迷失在各种边界细节当中")])]),t._v(" "),n("p",[t._v("对于问题 1，我们可以和另外一个常见现象联系起来：每次看完别人题解后总会有恍然大悟之感（尤其对于已经刷了小几百道题目的同学），但是下次题意一变化，却又不会做了。这种现象非常类似于“老师一讲就懂，自己一做就不会”。该现象的本质原因如下："),n("strong",[t._v("题解")]),t._v(" 或者 "),n("strong",[t._v("老师的讲解")]),t._v(" 属于在多种知识点之间建立了明确的连接，学生只需理解知识点与知识点之间的跳跃即可。而当自己去做的时候，则需要我们先在非常繁杂的知识点海洋当中根据题意线索抽丝剥茧，寻找到初始考察的知识点，然后再根据个人经验（前期系统学习加上个人总结）寻找到整道题目的知识脉络来得到答案。")]),t._v(" "),n("p",[t._v("那么对于问题 1，我们是否能够解决或者能否通过某种"),n("strong",[t._v("刻意地训练")]),t._v("来改善呢？")]),t._v(" "),n("blockquote",[n("p",[t._v("在这里，我们暂且不把范围扩大到"),n("strong",[t._v("更广义地知识学习")]),t._v("，就将范围约束在应试算法领域当中。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(369),alt:""}}),t._v("\n(图 6-1)")]),t._v(" "),n("ol",[n("li",[t._v("攻克问题 1 的第一步就是，分别单独理解"),n("strong",[t._v("应试算法")]),t._v("领域中的所有知识点，比如图论中的"),n("strong",[t._v("单源最短路")]),t._v("。而由于"),n("strong",[t._v("应试算法")]),t._v("的范围限定较多，考察也更多偏向于实现而非证明，所以这块内容难度并不会很大（相比于数学等纯粹学科来讲）")]),t._v(" "),n("li",[t._v("第二步，通过每个知识点的经典例题加深知识点理解。这块在基础竞赛教育中已经非常系统了。")]),t._v(" "),n("li",[t._v("第三步，也是最难的一步。我们知道在规模为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1)],1)],1),t._v(" 的点之间建立两两关联，就已经达到了 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 级别的计算量，更何况还存在更加复杂的关系。很少有人能够完全覆盖所有的知识点关联（题目也在每年不断扩展中）。在此时，我们应该停下脚步思考下我们学习算法的目的究竟是什么？"),n("strong",[t._v("只是为了应对面试")]),t._v("？"),n("strong",[t._v("为了挑战自己的极限")]),t._v("？目的不同你所花的精力也应该有所侧重，毕竟算法只是多个知识领域中的一个而已。而本课程的基调主要在于前者，稍微带点后者。因此，类似于"),n("strong",[t._v("后缀数组")]),t._v("、"),n("strong",[t._v("后缀自动机")]),t._v("这类较偏、较进阶的知识点我们就不会讲了。")],1)]),t._v(" "),n("p",[t._v("回归到 "),n("strong",[t._v("动态规划")]),t._v("，我不想一下子给大家抛出太多的概念性术语，具体的概念我们会在总结的时候再讲解。但是，提前把名称给出来还是有必要的。")]),t._v(" "),n("p",[t._v("动态规划中常用的术语有如下几个：")]),t._v(" "),n("ul",[n("li",[t._v("阶段")]),t._v(" "),n("li",[t._v("状态")]),t._v(" "),n("li",[t._v("状态转移方程")]),t._v(" "),n("li",[t._v("无后效性")]),t._v(" "),n("li",[t._v("决策")]),t._v(" "),n("li",[t._v("重叠子问题")]),t._v(" "),n("li",[t._v("最优子结构性质")])]),t._v(" "),n("p",[t._v("尽管如上文所说，动态规划非常的灵活，没有特别固定的套路。但随着多年的信息竞赛发展，众多前辈仍然将很多经典例题进行了归类，并总结出不少的模板。而这些经典例题以及类别也是我们动态规划章节的主题。具体细分如下：")]),t._v(" "),n("ol",[n("li",[t._v("线性 DP\n"),n("ul",[n("li",[t._v("数字三角形模型")]),t._v(" "),n("li",[t._v("最长上升子序列模型")]),t._v(" "),n("li",[t._v("背包模型")]),t._v(" "),n("li",[t._v("状态机模型")])])]),t._v(" "),n("li",[t._v("区间 DP")]),t._v(" "),n("li",[t._v("数位 DP")]),t._v(" "),n("li",[t._v("状态压缩 DP")]),t._v(" "),n("li",[t._v("树形 DP")]),t._v(" "),n("li",[t._v("DAG 上的 DP")]),t._v(" "),n("li",[t._v("DP 优化\n"),n("ul",[n("li",[t._v("单调队列优化")]),t._v(" "),n("li",[t._v("斜率优化")]),t._v(" "),n("li",[t._v("四边形不等式优化")])])])]),t._v(" "),n("blockquote",[n("p",[t._v("而这里，更稀少的 "),n("strong",[t._v("插头DP")]),t._v("、"),n("strong",[t._v("基环树DP")]),t._v("、"),n("strong",[t._v("概率DP")]),t._v("、"),n("strong",[t._v("动态DP")]),t._v("我们就不讲解了")])]),t._v(" "),n("h2",{attrs:{id:"正文"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#正文"}},[t._v("#")]),t._v(" 正文")]),t._v(" "),n("p",[t._v("遍寻多本竞赛参考书，对于线性 DP 的定义并不具体，原因可能在于不理解该特性并不会影响我们完成题目。而本文的线性 DP 的概念来自于《算法竞赛进阶指南》一书：")]),t._v(" "),n("blockquote",[n("p",[t._v("线性 DP：指的是具有线性 “阶段” 划分的动态规划算法被统称为线性 DP。因此线性 DP 并不局限于 “线性时间复杂度” 的一维动态规划，如果一个动态规划算法的“状态”包含多个维度，但在每个维度都具有“线性”变化的“阶段”，仍然可以被称为“线性 DP”。")])]),t._v(" "),n("p",[t._v("理论性概念暂不多说，我们直接通过题目来加深对动态规划的理解。")]),t._v(" "),n("p",[t._v("第一个要讲解的内容是："),n("strong",[t._v("数字三角形模型")])]),t._v(" "),n("p",[t._v("该模型起源于 "),n("strong",[t._v("IOI 1994")]),t._v("，由于其考察内容之经典，在如今已经成为了动态规划的经典入门题目，并且不断变形出现在不同的赛场之上。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(370),alt:""}}),t._v("\n(图 6-2)")]),t._v(" "),n("p",[t._v("在看到题目的时候，我们暂且不要先入为主，直接进入动态规划的思路（避免虚假的理解）。我们先抽取出题意来：")]),t._v(" "),n("ol",[n("li",[t._v("在所有合法的路径中获取路径和最大的路径")]),t._v(" "),n("li",[t._v("路径和为路径中所有数字的和")]),t._v(" "),n("li",[t._v("合法路径指的是不会越界，并且每步决策只能往左下或右下走")])]),t._v(" "),n("p",[t._v("面对这样的题意，我们最朴素的想法就是"),n("strong",[t._v("枚举所有的可能路径，在枚举过程中计算路径和，比较得出最大和")]),t._v(" "),n("img",{attrs:{src:a(371),alt:""}}),t._v("\n代码也很容易得到：")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readline\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dfs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    \n    res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dfs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dfs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    r "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    ans "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    ans "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dfs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("整体代码的思路和题意的思路是一致的，就是直接"),n("strong",[t._v("模拟路径行走的过程")]),t._v("，从第一行开始，到最后一行结束，在每个点有两种可能决策："),n("strong",[t._v("向左下或者右下")]),t._v("。")]),t._v(" "),n("p",[t._v("假设共有 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1)],1)],1),t._v(" 行，每行有两种决策，每次决策时间复杂度为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(", 因此时间复杂度为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"n"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[t._v("上述代码稍微学过一点 "),n("strong",[t._v("dfs")]),t._v(" 的同学就能直接写出来，但是这里面仍然隐含另外一重深意："),n("strong",[t._v("阶段")]),t._v(" - 我们理所当然的将每一行当作了一个阶段的划分依据，这是我们大脑直接模拟给出的，因为符合我们的日常生活场景。但是，很多时候题目给出的模型是抽象的，且很难映射联想，此时就需要多加注意了。")]),t._v(" "),n("p",[t._v("仔细模拟下我们会发现，在整个 "),n("strong",[t._v("dfs")]),t._v(" 的过程中会产生大量如下图所示的重复计算。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(372),alt:""}}),t._v("\n(图 6-4)")]),t._v(" "),n("p",[t._v("减少重复计算的方法之一就是用内存将其存储起来，也就是"),n("strong",[t._v("空间换时间")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readline\nsys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setrecursionlimit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1500")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dfs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        dp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    \n\n    dp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dfs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dfs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    r "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    dp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    ans "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    ans "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dfs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("这也是我们所说的 "),n("strong",[t._v("记忆化递归")]),t._v("，或者叫做 "),n("strong",[t._v("从上到下的 DP")]),t._v("。这种微小的变化直接将时间复杂度降低到 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 级别。")],1),t._v(" "),n("p",[t._v("在这里，计算时间复杂度的技巧是直接统计"),n("strong",[t._v("可能状态")]),t._v("的数量。")]),t._v(" "),n("blockquote",[n("p",[t._v("注意： 这里 "),n("code",[t._v("sys.setrecursionlimit(1500)")]),t._v(" 避免递归过深报 Runtime Error 错误")])]),t._v(" "),n("p",[t._v("从这里，我们更加深入的思考 "),n("code",[t._v("dp[i][j]")]),t._v(" 是否有更多意义？")]),t._v(" "),n("p",[t._v("从上述代码来看，"),n("code",[t._v("dp[i][j]")]),t._v(" 其实存储的是："),n("strong",[t._v("从坐标(i, j) 开始走到最后一行的最大值")])]),t._v(" "),n("p",[t._v("这样我们就将问题从 "),n("strong",[t._v("(0, 0) 开始走到最后一行的最大值")]),t._v(" 一般化到 "),n("strong",[t._v("(i, j) 开始走到最后一行的最大值")]),t._v("。")]),t._v(" "),n("p",[t._v("在这里，我们就可以将这种一般化定义为 "),n("strong",[t._v("状态")]),t._v("（后面我们将 "),n("code",[t._v("(i, j)")]),t._v(" 称为状态）。很明显，最后一行的所有 "),n("strong",[t._v("状态")]),t._v(" 可以直接求解，也就是所谓的"),n("strong",[t._v("最简单子问题")]),t._v("。而整个问题的求解都是 "),n("strong",[t._v("最大值")]),t._v("，属于"),n("strong",[t._v("最值")]),t._v(" 的一种，也就引出了"),n("strong",[t._v("最优子结构")]),t._v("的概念。")]),t._v(" "),n("p",[t._v("很明显的是，"),n("code",[t._v("(i, j)")]),t._v(" 状态在被求解出来之后，不会受到 "),n("code",[t._v("(i-k, j1)")]),t._v(" 的影响，也就是所谓的 "),n("strong",[t._v("无后效性")]),t._v("。")]),t._v(" "),n("p",[t._v("那么状态转移方程该如何得出来呢？")]),t._v(" "),n("p",[t._v("在这里我们引入一种新的思考方式 - "),n("strong",[t._v("从集合角度思考状态转换")]),t._v("（来源于 yxc - NOI 金牌得主）：\n"),n("img",{attrs:{src:a(373),alt:""}})]),t._v(" "),n("p",[n("strong",[t._v("最简单状态的表示")]),t._v(" 是另外一个难点（数字三角形模型不存在问题，但是其他问题则需要好好思考一番，避免以后出错，比如部分背包问题的变形）")]),t._v(" "),n("p",[n("strong",[t._v("在这里，我仍然需要强调的是，上述无论是从朴素->记忆化-> dp，还是集合论思考，都只能减缓你思考的坡度，减少你思考的心智负担。而不能代替你思考，也不能帮助你如易筋经一般一通百通。动态规划的灵活性仍然需要你在上述两种思考方式的基础上大量经典例题的练习。")])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    r "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    f "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h2",{attrs:{id:"其他例题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他例题"}},[t._v("#")]),t._v(" 其他例题")]),t._v(" "),n("p",[t._v("https://www.acwing.com/problem/content/description/277/")]),t._v(" "),n("p",[t._v("https://leetcode-cn.com/problems/unique-paths/")]),t._v(" "),n("p",[t._v("https://leetcode-cn.com/problems/minimum-path-sum/")]),t._v(" "),n("p",[t._v("https://www.luogu.com.cn/problem/P1004")])])}),[],!1,null,null,null);s.default=p.exports}}]);